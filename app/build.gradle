apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.apollographql.apollo'

android {
    compileSdkVersion sdk.compile

    defaultConfig {
        applicationId "com.wizeline.simpleapollosample"
        minSdkVersion sdk.min
        targetSdkVersion sdk.target
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

apollo {
    generateKotlinModels.set(true)
    customTypeMapping = [
            "DateTime"  : "java.util.Date"
    ]
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation libraries.kotlin
    implementation libraries.androidx.ktx
    implementation libraries.androidx.appcompat
    implementation libraries.androidx.legacy
    implementation libraries.androidx.constraintLayout
    implementation libraries.androidx.recyclerView
    implementation libraries.material.material
    implementation libraries.lifecycle.runtime
    implementation libraries.lifecycle.viewModel
    implementation libraries.lifecycle.liveData
    implementation libraries.lifecycle.savedState

    implementation libraries.apollo.runtime
    implementation libraries.apollo.cache

    implementation libraries.viewState

    implementation libraries.koin.core
    implementation libraries.koin.viewModel

    implementation project(":simpleapollo")

    testImplementation libraries.junit
    androidTestImplementation libraries.extJunit
    androidTestImplementation libraries.espressoCore
}
